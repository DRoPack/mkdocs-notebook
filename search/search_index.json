{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Code Blotter","text":"<p>Hey there, welcome to the Code Blotter! This is where I'm jotting down all my programming adventures, from my \"ah-ha\" moments to the head-scratching quirks of learning to program. It's like my personal programming diary, filled with code snippets, insights, and reflections from my journey in the world of programming.</p> <p>This blotter is being developed with <code>MkDocs</code> and the <code>Material for MkDocs</code> to be an online resource after years of documenting in Microsoft OneNote. OneNote was just no longer cutting it for me as a documentation tool due to the lack of code blocks and poor search capabilities. This forced me to look for something better.</p> <p>Whether you're a coding newbie or a seasoned developer, I hope you find something useful and inspiring here. Let's dive in and explore together!</p>"},{"location":"css/","title":"CSS: Concepts and Examples","text":""},{"location":"css/#table-of-contents","title":"Table of Contents","text":"<ul> <li> Attribute Selectors</li> <li> Combinators</li> <li> Pseudo Selectors</li> <li> Box-Sizing</li> </ul>"},{"location":"css/#box-sizing","title":"Box-Sizing","text":"<p><code>box-sizing</code> is a CSS property used to define how the total width and height of an element are calculated. It controls whether the padding and border are included in the element's dimensions or not. A best practice is to apply it as a universal selector to set the default behavior for the entire <code>HTML</code> document.</p> <ul> <li><code>border-box</code> - accounts for any border and padding values in the elements total width and height</li> </ul> CSS <pre><code>element {\n    box-sizing: border-box;\n}\n\n/* Set universal selector  */\n* {\n    box-sizing: border-box;\n}\n</code></pre>"},{"location":"css/attribute-selectors/","title":"Attribute Selectors","text":""},{"location":"css/attribute-selectors/#exact-match","title":"Exact Match (=)","text":"<p>Definition</p> <p> Targets elements with an attribute value exactly matching the specified value.</p> CSSHTML <pre><code>    a[href=\"https://example.org\"] {\n        color: green;\n    }\n</code></pre> <pre><code>    &lt;a href=\"https://example.org\"&gt;SELECTED&lt;/a&gt;\n    &lt;a href=\"https://example.com\"&gt;not selected&lt;/a&gt;\n</code></pre>"},{"location":"css/attribute-selectors/#contains","title":"Contains (*=)","text":"<p>Definition</p> <p> Targets elements with an attribute value containing the specified substring.</p> CSSHTML <pre><code>    a[href*=\"example\"] {\n        font-size: 2em;\n    }\n</code></pre> <pre><code>    &lt;a href=\"https://example.org\"&gt;SELECTED&lt;/a&gt;\n    &lt;a href=\"https://example.com\"&gt;SELECTED&lt;/a&gt;\n    &lt;a href=\"https://MyExample.com\"&gt;SELECTED&lt;/a&gt;\n    &lt;a href=\"https://sample.org\"&gt;not selected&lt;/a&gt;\n</code></pre>"},{"location":"css/attribute-selectors/#ends-with","title":"Ends With ($=)","text":"<p>Definition</p> <p> Targets elements with an attribute value ending with the specified substring.</p> CSSHTML <pre><code>    a[href$=\".org\"] {\n        font-style: italic;\n    }\n</code></pre> <pre><code>    &lt;a href=\"https://example.org\"&gt;SELECTED&lt;/a&gt;\n    &lt;a href=\"https://example.com\"&gt;not selected&lt;/a&gt;\n</code></pre>"},{"location":"css/attribute-selectors/#contains-word","title":"Contains Word (~=)","text":"<p>Definition</p> <p> Targets elements with an attribute value containing the specified word (space-separated).</p> CSSHTML <pre><code>    a[class~=\"logo\"] {\n        padding: 2px;\n    }\n</code></pre> <pre><code>    &lt;a class=\"logo\"&gt;SELECTED&lt;/a&gt;\n    &lt;a class=\"main logo\"&gt;SELECTED&lt;/a&gt;\n    &lt;a class=\"logoman\"&gt;Not Applied&lt;/a&gt;\n</code></pre>"},{"location":"css/attribute-selectors/#attribute-exists","title":"Attribute Exists","text":"<p>Definition</p> <p> Targets elements that have the specified attribute, regardless of its value.</p> CSSHTML <pre><code>    a[title] {\n        color: purple;\n    }\n</code></pre> <pre><code>    &lt;a title=\"tooltip\"&gt;SELECTED&lt;/a&gt;\n    &lt;a&gt;not selected&lt;/a&gt;\n</code></pre>"},{"location":"css/attribute-selectors/#override-inline-styles","title":"Override Inline Styles","text":"<p>Definition</p> <p> Targets elements with inline styles, useful for overriding them.</p> CSSHTMLSharePoint Calendar <pre><code>    a[style] {\n        height: 2px !important;\n    }\n</code></pre> <pre><code>    &lt;a style=\"color: red;\"&gt;SELECTED&lt;/a&gt;\n    &lt;a&gt;not selected&lt;/a&gt;\n</code></pre> <pre><code>    /* /manufacturing/SitePage/buildingschedule.aspx - overrides inline heights for calendar  */\n    .ms-acal-item[style] {\n        height: 19px !important;\n    }\n\n    &lt;div class=\"ms-acal-item\" style=\"height: 10px;\"&gt;SELECTED&lt;/div&gt;\n</code></pre>"},{"location":"css/combinators/","title":"Combinators","text":""},{"location":"css/combinators/#adjacent-sibling","title":"Adjacent Sibling +","text":"<p>Definition</p> <p>  Elements share the same parent</p> <p> Second element comes immediately after the first element</p> CSSHTML <pre><code>h2 + p {\n    color: red;\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;h2&gt;Not Applied&lt;/h2&gt;\n    &lt;p&gt;CSS Applied&lt;/p&gt;\n    &lt;h2&gt;Not Applied&lt;/h2&gt;\n    &lt;h3&gt;Not Applied&lt;/h3&gt;\n    &lt;p&gt;Not Applied&lt;/p&gt;\n    &lt;h2&gt;Not Applied&lt;/h2&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css/combinators/#general-sibling","title":"General Sibling ~","text":"<p>Definition</p> <p> Elements share the same parent</p> <p> Second element comes first element</p> CSSHTML <pre><code>h2 ~ p {\n    color: red;\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;h2&gt;Not Applied&lt;/h2&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n    &lt;h2&gt;Not Applied&lt;/h2&gt;\n    &lt;h3&gt;Not Applied&lt;/h3&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css/combinators/#child","title":"Child &gt;","text":"<p>Definition</p> <p> Second element is a direct child of the first element</p> CSSHTML <pre><code>h2 &gt; p {\n    color: red;\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;div&gt;Not Applied&lt;/div&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n    &lt;div&gt;Not Applied&lt;/div&gt;\n    &lt;article&gt;\n        &lt;p&gt;Not Applied&lt;/p&gt;\n    &lt;/article&gt;\n    &lt;p&gt;**CSS Applied*&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css/combinators/#descendant","title":"Descendant","text":"<p>Definition</p> <p> Second element is a descendant of the first element</p> CSSHTML <pre><code>h2 p {\n    color: red;\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;div&gt;Not Applied&lt;/div&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n    &lt;div&gt;Not Applied&lt;/div&gt;\n    &lt;article&gt;\n        &lt;p&gt;**CSS Applied&lt;/p&gt;\n    &lt;/article&gt;\n    &lt;p&gt;**CSS Applied&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css/css-template/","title":"CSS Template","text":"<p>Template to be used for all CSS pages to provide a clean consistent look.  </p>"},{"location":"css/css-template/#name-of-the-css-class","title":"Name of the CSS class","text":"<p>Definition</p> <p> Description of what the CSS does</p> CSSHTML <pre><code>h2 p {\n    color: red;\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;div&gt;not selected&lt;/div&gt;\n    &lt;p&gt;SELECTED&lt;/p&gt;\n    &lt;div&gt;not selected&lt;/div&gt;\n    &lt;article&gt;\n        &lt;p&gt;SELECTED&lt;/p&gt;\n    &lt;/article&gt;\n    &lt;p&gt;SELECTED&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css/pseudo-selectors/","title":"Pseudo Class Selectors","text":""},{"location":"css/pseudo-selectors/#parent-selector","title":"Parent Selector","text":"<p>Definition</p> <p> Targets a parent element if child or descendant element matching a condition.</p> CSSHTML <pre><code>    /* Rule applies to the &lt;th&gt; element only if it contains a descendant element with the class col-title class  */\n    th:has(.col-title) {\n        width: 300px;\n    }\n</code></pre> <pre><code>    &lt;th&gt;\n        &lt;span class=\"col-title\"&gt;Title&lt;/span&gt;\n    &lt;/th&gt;\n</code></pre>"},{"location":"git/","title":"Git Main","text":"<ul> <li> Git Cheatsheet</li> </ul>"},{"location":"git/git-cheatsheet/","title":"Git Commands Cheatsheet","text":""},{"location":"git/git-cheatsheet/#github-basics","title":"GitHub Basics","text":"<pre><code>git init                                # Initialize git to local project\n\ngit clone https://github/repo           # Clone repo from GitHub to local machine\ngit add . || git add fileName.txt       # Add to staging, multiple files just add a space between files\ngit commit -m \"Fixed bug\u2026\"              # Commit changes\ngit commit --amend                      # Amend commit message prior to push\ngit push                                # Push changes to GitHub\ngit pull --rebase                       # Update local with GitHub code\n</code></pre>"},{"location":"git/git-cheatsheet/#status","title":"Status","text":"<pre><code>git status || git status -s             # Status\ngit log --oneline --all --graph         # Show linear graph of all local commits (q to exit)\ngit ls-files                            # Display all files being tracked in Git\n</code></pre>"},{"location":"git/git-cheatsheet/#stash","title":"Stash","text":"<pre><code>git stash push -m \"Work in progress\"   # Save uncommitted changes and add a message\ngit stash list                         # List all stashed changes\ngit stash apply stash@{2}              # Apply specific stash to the working directory (does not remove it)\ngit stash drop stash@{1}               # Delete a specific stash\ngit stash pop stash@{2}                # Apply specific stash and remove it from the stash list\n\ngit stash show stash@{1}               # Show a summary of changes in a specific stash\ngit stash show -p stash@{2}            # Show a detailed diff of changes in a specific stash\n</code></pre>"},{"location":"git/git-cheatsheet/#branching","title":"Branching","text":"<pre><code>git branch                              # List all branches in the repository\ngit branch &lt;branch-name&gt;                # Create a new branch\n\ngit switch &lt;branch-name&gt;                # Switch to an existing branch\ngit switch -c &lt;branch-name&gt;             # Create a new branch and switch to it\n\ngit branch -d &lt;branch-name&gt;             # Delete a branch (if it's fully merged)\ngit branch -D &lt;branch-name&gt;             # Force delete a branch (even if it's not merged)\n\ngit merge &lt;branch-name&gt;                 # Merge a branch into the current branch\ngit rebase &lt;branch-name&gt;                # Rebase the current branch onto another branch\n\ngit pull origin &lt;branch-name&gt;           # Pull changes from a specific branch on the remote\ngit push origin &lt;branch-name&gt;           # Push the branch to the remote repository\ngit push origin --delete &lt;branch-name&gt;  # Delete a branch from the remote repository\n</code></pre>"},{"location":"git/git-cheatsheet/#reset-local","title":"Reset Local","text":"<pre><code>git reset --hard                       # Discard all local changes (unstaged and staged)  \n# Use if the local repo is out of sync with the remote after a rebase  \n\ngit reset --hard HEAD~1                # Undo the last commit and reset to the previous state  \ngit push origin --force                # Force push to remove the last commit from the remote  \n\ngit reflog                             # Show history of HEAD movements (useful for recovery)  \ngit reset --hard &lt;commit-hash&gt;         # Restore to a previous commit found in reflog  \n</code></pre>"},{"location":"git/git-cheatsheet/#staging-exclude-folderfile","title":"Staging Exclude Folder/File","text":"<pre><code>git add . \":!docs/markdown/mkdocs-material.md\"  # Excludes folder/file from from staging\n</code></pre>"},{"location":"git/git-cheatsheet/#staging-remove","title":"Staging Remove","text":"<pre><code>git restore --staged file.txt || .      # Remove files from staging\ngit rm --cached file1.js                # Remove file from staging\ngit rm --cached -r logs/                # Remove folder and all contents (recursive flag)\n</code></pre>"},{"location":"git/git-cheatsheet/#remotes","title":"Remotes","text":"<pre><code>git remote                              # List remote names\ngit remote -v                           # Show details of remotes\ngit fetch upstream                      # Get updates from source repository (default origin)\ngit switch master                       # Switch to master branch\ngit merge upstream/master               # Merge new source changes with local files\ngit push origin                         # Push merged changes to forked repository (GitHub)\n\n# Initialize New Repository and Push to Github\n1. Create a new repository on GitHub (without initializing it with README, .gitignore, etc..)\n2. Run the following commands in your local project folder:\n    git init                                # Initialize Git in local project\n    git remote add origin &lt;repository-url&gt;  # Add remote repository url\n    git add .                               # Add all files to staging\n    git commit -m \"Initial commit\"          # Commit staged files\n    git branch -M main                      # Rename the current branch to 'main' (force rename if necessary)\n    git push -u origin main                 # Push the branch and commits to the remote repository\n    git remote -v                           # Verify the remote connection\n</code></pre>"},{"location":"git/git-cheatsheet/#create-git-ignore","title":"Create Git Ignore","text":"<pre><code>touch .gitignore\necho JSFile1.txt &gt; .gitignore           # Add file to .gitignore\necho JSFile2 &gt;&gt; .gitignore              # Append file to .gitignore\necho temp/ &gt; .gitignore                 # Add folder to .gitignore\n</code></pre> <p>Tip</p> <ul> <li>Can't create .gitignore file: Ensure file is UTF-8 encoded</li> <li>Files not removed from untracked once added to .gitignore: Ensure correct encoding</li> <li>Using echo in PowerShell terminal causes issue: Use Bash terminal or PowerShell cmdlet for adding content</li> </ul>"},{"location":"git/git-cheatsheet/#renamemove","title":"Rename/Move","text":"<pre><code>git mv file1.js file2.txt               # Rename or move file\ngit docs/microsoft docs/tmp             # Rename folder\n</code></pre> <p>Tip</p> <p>GitHub is a case-sensitive environment.</p> <p>If your local folder is named microsoft and the GitHub folder (Microsoft) doesn't match case, you need to rename it to something different and then back.</p> <p>For example: <code>git docs/microsoft docs/tmp</code>, commit and push changes <code>git docs/temp docs/microsoft</code>, commit and push changes</p>"},{"location":"git/git-cheatsheet/#file-changes","title":"File Changes","text":"<pre><code>git diff blotterLibrary\\myfile.ps1        # Show changes\n</code></pre>"},{"location":"git/git-cheatsheet/#delete-file","title":"Delete File","text":"<pre><code>git rm file1.js                         # Remove file\n</code></pre>"},{"location":"html/","title":"HTML Main","text":""},{"location":"html/#coming-soon","title":"COMING SOON","text":""},{"location":"javascript/","title":"JavaScript Main","text":""},{"location":"javascript/#coming-soon","title":"COMING SOON","text":""},{"location":"javascript/fetch/","title":"Fetch API","text":"<p>Basic JavaScript fetch used with SharePoint Rest API</p> <pre><code>// Call SharePoint API (async)\nasync function fetchSharePointData(itemId) {\n  const baseUrl = _spPageContextInfo.webAbsoluteUrl;\n  const listGuid = \"33FB77C9-C3DB-4A40-8DC7-165B2A78EE0B\"; // Compliance Documents\n  const baseAPI = `${baseUrl}/_api/web/lists(guid'${listGuid}')`;\n  const select = `$select=Id,Title,Doc_x0020__x0023_,docNumber,spPerson/Title,spLookup/ID`;\n  const expand = `$expand=spPerson,spLookup`;\n\n  // SharePoint API Headers\n  const payload = {\n    method: \"GET\",\n    headers: { Accept: \"application/json; odata=nometadata\" },  // odata=verbose\n    credentials: \"same-origin\", // or credentials: 'include'\n  };\n\n  try {\n    const response = await fetch(\n      `${baseAPI}/items(${itemId})?${select}&amp;${expand}`,\n      payload\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log(data);  // if accept header is verbose, use data.value\n\n  } catch (error) {\n    console.error(\"Fetch Error:\", error);\n    throw error; // Re-throw to handle it in the event listener if needed\n  }\n}\n\nfetchSharePointData(itemId);\n</code></pre>"},{"location":"markdown/","title":"Markdown Main","text":"<ul> <li> Markdown Basics</li> <li> MkDocs Setup</li> </ul>"},{"location":"markdown/custom-fences/","title":"Custom Fences","text":"<p>An overview of the custom fences created for documenting HTTP calls in <code>Material for MkDocs</code>.  This feature will allow for a <code>Swagger</code> like display of API calls in markdown using code blocks with specific syntax.  </p>"},{"location":"markdown/custom-fences/#example","title":"Example","text":"Syntax<pre><code>    ``` httpCall\n\n        Method= GET\n\n        Path\n        _blotter.sharePoint/api/GetNames/{name}\n\n        Header\n        {\n            \"Accept\" : \"\"application/json;odata=nometadata\"\"\n        }\n\n            body\n        {\n            \"key\": \"value\"\n        }\n    ```\n</code></pre> <p>Output</p> <p> POST <pre><code>_api/web/lists/post-example</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=verbose\",\n\"accept\": \"application/json;odata=nometadata\"\n}</code></pre> Body <pre><code>{\n\"key\" : \"value\"\n}</code></pre> </p> <p>Toggle the arrow to the right of the endpoint path to display the header and body (if included)</p>"},{"location":"markdown/custom-fences/#usage","title":"Usage","text":"<p>The first line should contain 3 backtick (`) characters followed by httpCall, then the last line should contain the same number of backticks.</p> <pre><code>    ```httpCall\n\n    ```\n</code></pre> <p>Next to construct the body of the <code>httpCall</code> code block, we will be covering:</p> <ul> <li>Method</li> <li>Path</li> <li>Header</li> <li>Body</li> </ul> <p>Warning</p> <p>Each section of the code block requires a carriage return and indented by four spaces.</p>"},{"location":"markdown/custom-fences/#methods","title":"Methods","text":"<p>To pick the method of the HTTP call, write <code>method=&lt;method&gt;</code> on the next line of the code block.  The options for <code>&lt;method&gt;</code> are GET, POST, PUT, PATCH, and DELETE.  If the method line is skipped, it will default to GET.  </p> <pre><code>    ```httpCall\n\n       method=DELETE\n\n    ```\n</code></pre> Method Description <code>GET</code> GET     #61affe <code>POST</code> POST    #49cc90 <code>PUT</code> PUT    ##fca130 <code>PATCH</code> PATCH    #af01d9 <code>DELETE</code> DELETE    #f93e3e"},{"location":"markdown/custom-fences/#path","title":"Path","text":"<p>Next type<code>path</code>, then on the next line enter the api endpoint.</p> <pre><code>    ```httpCall\n\n       method=DELETE\n\n       path\n       _api/web/lists/endpoint-path\n\n    ```\n</code></pre>"},{"location":"markdown/custom-fences/#header-optional","title":"Header (optional)","text":"<p>Type <code>header</code>, then on the next line enter header information. This is optional, if left blank the header section will not appear in the custom fence layout.</p> <pre><code>    ```httpCall\n\n       method=DELETE\n\n       path\n       _api/web/lists/endpoint-path\n\n       header\n       {\n        \"key\" : \"value\"\n       }\n\n    ```\n</code></pre>"},{"location":"markdown/custom-fences/#body-optional","title":"Body (optional)","text":"<p>Type <code>body</code>, then on the next line enter the body information.  This is optional, if left blank the body section will not appear in the custom fence layout.</p> <pre><code>    ```httpCall\n\n       method=DELETE\n\n       path\n       _api/web/lists/endpoint-path\n\n       header\n       {\n        \"key\" : \"value\"\n       }\n\n       body\n       {\n        \"key\" : \"value\"\n       }\n\n    ```\n</code></pre>"},{"location":"markdown/custom-fences/#configuring-custom-fences","title":"Configuring Custom Fences","text":"<p>Custom Fences Files</p> <ul> <li>custom_fences.py</li> <li>custom_fences.css</li> <li>custom_fences.js</li> </ul> <p>Add markdown extension for custom super fences</p> mkdocs.yml<pre><code>    markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: httpCall\n          class: http\n          format: !!python/name:docs.assets.python.custom_fences.httpCall\n</code></pre> <p>While configuring the custom fences, the following error was encounter both locally while using <code>mkdocs serve</code> and when deploying to GitHub Pages.  The custom fences module was not able to be found. Both issues were related to the module not being added to the <code>PYTHONPATH</code>.  </p> <p>Failure</p> <p>Message Error: MkDocs encountered an error parsing the configuration file: while constructing a Python object cannot find module 'custom_fences' (No module named 'custom_fences')</p>"},{"location":"markdown/custom-fences/#add-path","title":"Add Path","text":"<ol> <li> <p>Activate Virtual Environment</p> Windows PowerShell<pre><code># Activate the virtual environment\nvenv\\Scripts\\activate.bat\n</code></pre> </li> <li> <p>Set <code>PYTHONPATH</code></p> Windows PowerShell<pre><code># Ensure `PYTHONPATH` is set in the current session\n$env:PYTHONPATH = \"C:\\{User\\Path}\\source\\repos\\mkdocs\\mkdocs-notebook\"\n</code></pre> </li> <li> <p>Check <code>PYTHONPATH</code></p> Windows PowerShell<pre><code># Confirm it\u2019s set correctly\n$env:PYTHONPATH\n</code></pre> </li> </ol> <p>Info</p> <p>These steps will need repeated each time the virtual environment is closed</p>"},{"location":"markdown/custom-fences/#github-actions-workflow","title":"GitHub Actions Workflow","text":"<p>Updating the GitHub Actions Workflow for MkDocs Deployment</p> <p>Update your <code>.github/workflows/deploy.yml</code> workflow file to ensure it correctly handles dependencies and sets the <code>PYTHONPATH</code> to include your custom module. Here\u2019s how you can modify your existing <code>.github/workflows/deploy.yml</code>:</p> <ol> <li> <p>Add a <code>requirements.txt</code> file:</p> <ul> <li>Create a <code>requirements.txt</code> file in the root of your repository (if you haven\u2019t already) with the necessary dependencies:</li> </ul> <pre><code>mkdocs\nmkdocs-material\npymdown-extensions\n</code></pre> </li> <li> <p>Update your <code>.github/workflows/deploy.yml</code>:</p> <ul> <li>Modify your <code>.github/workflows/deploy.yml</code> to set the <code>PYTHONPATH</code> and install dependencies from <code>requirements.txt</code>.</li> </ul> GitHub Workflow  File<pre><code>name: ci\n\non:\npush:\n    branches:\n    - master\n    - main\n\npermissions:\ncontents: write\n\njobs:\ndeploy:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Configure Git Credentials\n        run: |\n        git config user.name github-actions[bot]\n        git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n\n    - uses: actions/setup-python@v5\n        with:\n        python-version: 3.x\n\n    - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV\n\n    - uses: actions/cache@v4\n        with:\n        key: mkdocs-material-${{ env.cache_id }}\n        path: .cache\n        restore-keys: |\n            mkdocs-material-\n\n    - name: Install dependencies\n        run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n\n    - name: Set PYTHONPATH\n        run: |\n        export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/docs/assets/python\n        echo \"PYTHONPATH=$PYTHONPATH\" &gt;&gt; $GITHUB_ENV\n\n    - name: Deploy to GitHub Pages\n        run: mkdocs gh-deploy --force\n</code></pre> </li> </ol> <p>Explanation of the Updated Steps</p> <ol> <li> <p>Install Dependencies:</p> <ul> <li>This step ensures all dependencies listed in <code>requirements.txt</code> are installed, which includes <code>mkdocs</code>, <code>mkdocs-material</code>, and any other packages you may have listed.</li> </ul> </li> <li> <p>Set PYTHONPATH:</p> <ul> <li>This step sets the <code>PYTHONPATH</code> environment variable to include your custom module path (<code>docs/assets/python</code>). The path is then exported to the GitHub Actions environment.</li> </ul> </li> <li> <p>Deploy to GitHub Pages:</p> <ul> <li>The <code>mkdocs gh-deploy --force</code> command is run to deploy the site.</li> </ul> </li> </ol>"},{"location":"markdown/markdown-basics/","title":"Markdown Basics","text":""},{"location":"markdown/markdown-basics/#headers","title":"Headers","text":"Syntax Result Syntax Result <code># H1</code> # Heading level 1 <code>#### H4</code> #### Heading level 4 <code>## H2</code> ## Heading level 2 <code>##### H5</code> ##### Heading level 5 <code>### H3</code> ### Heading level 3 <code>###### H6</code> ###### Heading level 6"},{"location":"markdown/markdown-basics/#emphasis","title":"Emphasis","text":"Syntax Result <code>*Italic text* or _italic text_</code> Italic text or italic text <code>**Bold text** or __bold text__</code> Bold text or bold text <code>~~Strikethrough text~~</code> ~~Strikethrough text~~"},{"location":"markdown/markdown-basics/#escaping-characters","title":"Escaping Characters","text":"Syntax<pre><code>\\*This text is not italicized\\*\n</code></pre>"},{"location":"markdown/markdown-basics/#highlight","title":"Highlight","text":"Syntax<pre><code>Highlight ==words to get an A== in markdown\n</code></pre> <p>Result</p> <p>Highlight words to get an A in markdown</p>"},{"location":"markdown/markdown-basics/#paragraphs","title":"Paragraphs","text":"Syntax Result <code>Random thoughts in markdown.</code> Random thoughts in markdown. <code>Add content to your markdown.&lt;br&gt;Then break over several ines.</code> Add more content to your markdown page.Then break that over several ines. <p>Tip</p> <p>Adding a <code>&lt;br&gt;</code> to insert line breaks into paragraphs is the preferred method.  Double space (or more) will add a line break known as trailing whitespace, but <code>&lt;br&gt;</code> conveys clearly the intent for a line break.</p>"},{"location":"markdown/markdown-basics/#blockquotes","title":"Blockquotes","text":"<pre><code>&gt; This is a blockquote.\n</code></pre> <p>This is a blockquote.</p> <pre><code>&gt; This is a blockquote.&lt;br&gt; You can write multiple lines.\n</code></pre> <p>This is a blockquote. You can write multiple lines.</p>"},{"location":"markdown/markdown-basics/#links","title":"Links","text":"Syntax Result <code>[Link to OpenAI](https://openai.com)</code> Link to OpenAI <code>&lt;https://openai.com&gt;</code> https://openai.com <code>&lt;fake@example.com&gt;</code> fake@example.com <code>[Email Me](fake@example.com)</code> Email Me <code>[Escaping Charaters](#escaping-charaters)</code> Escaping Characters"},{"location":"markdown/markdown-basics/#reference-style-links","title":"Reference-style Links","text":"<p>Reference style links provide a way to keep markdown clean by inserting a reference to a link somewhere else in the markdown file.</p> Syntax<pre><code>Keep your [long links][link-openai] out of my text!!\n\n[link-openai]: https://openai.com\n</code></pre> <p>Result: Keep your long links out of my text!!</p>"},{"location":"markdown/markdown-basics/#lists","title":"Lists","text":""},{"location":"markdown/markdown-basics/#unordered-list","title":"Unordered List","text":"Syntax<pre><code>- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n</code></pre>"},{"location":"markdown/markdown-basics/#ordered-list","title":"Ordered List","text":"Syntax<pre><code>1. First item\n2. Second item\n   1. Subitem 2.1\n   2. Subitem 2.2\n</code></pre>"},{"location":"markdown/markdown-basics/#images","title":"Images","text":"Syntax Result <code>![web image](https://picsum.photos/100)</code> <code>![local image](../assets/img/markdown/example.jpg)</code>"},{"location":"markdown/markdown-basics/#code","title":"Code","text":"<p>Inline <code>code</code> can be inserted using backticks.</p>"},{"location":"markdown/markdown-basics/#code-block","title":"Code block","text":"Syntax<pre><code>``` javascript\nfunction name(yourName) {\n  const myName = `Hi, my name is ${yourName}`;\n}\n```\n</code></pre> Result<pre><code>function name(yourName) {\n  const myName = `Hi, my name is ${yourName}`;\n}\n</code></pre> Syntax<pre><code>``` css\n#id {\n    color: green;\n}\n\n.my-class {\n    background-color: lime;\n}\n```\n</code></pre> Result<pre><code>#id {\n  color: green;\n}\n\n.my-class {\n  background-color: lime;\n}\n</code></pre> <p>Info</p> <p>List of supported languages for code blocks</p>"},{"location":"markdown/markdown-basics/#tables","title":"Tables","text":"Syntax<pre><code>| Name  | Age |\n| ----- | --- |\n| Alice | 30  |\n| Bob   | 35  |\n| Carol | 25  |\n</code></pre> <p>Result</p> Name Age Alice 30 Bob 35 Carol 25"},{"location":"markdown/markdown-basics/#horizontal-rule","title":"Horizontal Rule","text":"Syntax<pre><code>---\n</code></pre>"},{"location":"markdown/markdown-basics/#task-lists","title":"Task Lists","text":"Syntax<pre><code>- [x] Task 1\n- [ ] Task 2\n- [ ] Task 3\n</code></pre>"},{"location":"markdown/mkdocs-material/","title":"Material MkDocs","text":"<p>TODO</p> <p>Document Material MkDocs syntax</p> <p>Material MkDocs Site</p> <p>Base for Presentation:</p> <p>[James Willett YouTube] (https://www.youtube.com/watch?v=Q-YA_dA8C20&amp;list=PLw_jGKXm9lIaJCD8YClu6cAz1TcFdJdIf&amp;index=2)</p>"},{"location":"markdown/mkdocs-setup/","title":"MkDocs","text":"<p><code>MkDocs</code> is a static site generator that provides a simplistic way for generating documentation written in <code>markdown</code>. <code>MkDocs</code> alone has a rich feature set of plugins and themes that will handle your documentation needs. However, the user community has contributed vastly to this project and added additional packages that can be installed to improve upon <code>MkDocs</code>. One of the most highly used packages is <code>Material for MkDocs</code>.</p>"},{"location":"markdown/mkdocs-setup/#python-install","title":"Python Install","text":"<p>MkDocs requires <code>Python</code> and the Python package manager (<code>pip</code>) installed on your system. Newer installs of <code>Python</code> will include the package manager.</p> <p>Download Python</p> <p>After install check installation of <code>Python</code> from the command line</p> Windows cmd<pre><code>$ python --version\nPython 3.12.3\n\n$ pip --version\npip 24.0 from C:..user\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pip (python 3.12)\n</code></pre> <p>Note</p> <p>For Windows install of Python be sure to check the box to add Python to your PATH (It's normally off by default)</p> <p></p>"},{"location":"markdown/mkdocs-setup/#mkdocs-material-for-mkdocs-install","title":"MkDocs / Material for MkDocs Install","text":"Material for MkDocs MkDocs"},{"location":"markdown/mkdocs-setup/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>This will automatically install these dependencies: <code>MkDocs</code>, <code>Markdown</code>, <code>Pygments</code> and <code>Python Markdown Extensions</code>.</p> <p>Material for MkDocs Documentation</p> Install<pre><code>pip install mkdocs-material\n\n// Install a specific version\npip install mkdocs-material==\"9.*\"\n</code></pre> Check version<pre><code>pip show mkdocs-material\n</code></pre> Upgrade<pre><code>pip install --upgrade --force-reinstall mkdocs-material\n</code></pre>"},{"location":"markdown/mkdocs-setup/#mkdocs_1","title":"MkDocs","text":"<p>This will install <code>MkDocs</code> only. </p> <p>MkDocs Documentation</p> <p>Install <code>MkDocs</code> package using pip:</p> Windows cmd<pre><code>pip install mkdocs\n</code></pre> <p>After install check installation of <code>MkDocs</code> from the command line</p> Windows cmd<pre><code>$mkdocs --version\nmkdocs, version 1.5.3 from C:...\\Programs\\Python\\Python312\\Lib\\site-packages\\mkdocs (Python 3.12)\n</code></pre>"},{"location":"markdown/mkdocs-setup/#creating-a-new-project","title":"Creating a New Project","text":"<p>Open command line and navigate to the location where the project will be stored. To create a new <code>MkDocs</code> project, run the following command from the command line. Then use the <code>cd</code> command to change directories to the newly created <code>MkDocs</code> directory.</p> Windows cmd<pre><code>mkdocs new my-project\ncd my-project\n</code></pre> <p>Tip</p> <p>In the example above the new <code>MkDocs</code> project was called 'my-project' but any name can be used for the new project name.</p>"},{"location":"markdown/mkdocs-setup/#python-virtual-environment","title":"Python Virtual Environment","text":"<p><code>Python 3</code> has a built-in virtual environment that will isolate project packages from other projects on your system. It is recommended to activate the virtual environment each time you open a <code>Python</code> project to work on it. The virtual environment will cease each time you close the shell or IDE from which you activated from.</p> <p>Note</p> <p>The command lines below are executed while inside your <code>Python</code> project directory</p> Windows Git Bash Linux/macOS Windows cmd<pre><code># Make the virtual environment\npython -m venv venv\n\n# Activate the virtual environment\n.venv\\Scripts\\activate.bat\n</code></pre> Git Bash Windows<pre><code># Make the virtual environment\npython -m venv venv\n\n# Activate the virtual environment\nsource .venv/bin/activate\n</code></pre> Shell<pre><code># Make the virtual environment\npython3 -m venv venv\n\n# Activate the virtual environment\nsource venv/bin/activate\n</code></pre> <p>Note</p> <p>Reactivate an existing virtual environment by following the same instructions to activate.  There is no need to create a new virtual environment.</p>"},{"location":"markdown/mkdocs-setup/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"markdown/mkdocs-setup/#build-site","title":"Build Site","text":"<p>Before deploying the <code>MkDocs</code> project to the web, you must first build the documentation.</p> Windows cmd<pre><code>mkdocs build\n</code></pre> <p>This will create a new directory in your project called <code>site</code>. To view the content of the directory.</p> Windows Linux/macOS Windows cmd<pre><code>dir site\n</code></pre> Shell<pre><code>ls site\n</code></pre>"},{"location":"markdown/mkdocs-setup/#tutorial","title":"Tutorial","text":"<p>The documentation above is outlined very well by @james-willett in this YouTube video</p> <p> How to setup Material for MkDocs by @james-willett</p>"},{"location":"markdown/mkdocs-setup/#plugin-catalog","title":"Plugin Catalog","text":"<p> MkDocs Plugin Catalog</p>"},{"location":"microsoft/","title":"Microsoft Main","text":""},{"location":"microsoft/power-automate/","title":"Power Automate Main","text":"<ul> <li> Arrays</li> <li> Expressions</li> </ul>"},{"location":"microsoft/power-automate/arrays/","title":"Arrays","text":""},{"location":"microsoft/power-automate/arrays/#compare-two-arrays","title":"Compare Two Arrays","text":"<p>Comparing two arrays to find matches or differences doesn't have to be complicated with lots of Apply to Each actions.  Using the Select Data Operation action along with the Filter Array action can simplify the process and make the flow more efficient.</p> <p>In this example, the flow is pulling in a table from Excel and data from Planner.  We are then comparing the <code>Title</code> column to find the missing information in Planner and adding it.</p>"},{"location":"microsoft/power-automate/arrays/#select-action","title":"Select Action","text":"<p>Add a Data Operation Select action.  This action is selecting all items from the PlannerTasks data and returning just the title column.  </p> <pre><code>From input:\n    @{outputs('PlannerTasks')?['body/value']}\nMap input:\n    @{item()?['title']}\n</code></pre> <p></p>"},{"location":"microsoft/power-automate/arrays/#filter-array-action","title":"Filter Array Action","text":"<p>Add a Data Operation Filter Array action.  This filters the Excel table data by comparing it to existing Planner tasks. It checks for a match in the 'Title' column between both datasets.</p> <pre><code>From input:\n    @{outputs('ReviseIB')?['body/value']}\nFilter Query input:\n    @not(contains(@{body('Select-PlannerTaskTitle')},@{item()?['Title']}))\n</code></pre> <p></p>"},{"location":"microsoft/power-automate/expressions/","title":"Expressions","text":""},{"location":"microsoft/power-automate/expressions/#split","title":"Split","text":"Syntax<pre><code>fileName = `myFile.docx` \n\nsplit(variables('fileName'),'.')[0]\nresult: myFile\n\n\nsplit(variables('fileName'),'.')[1] \nresult: docx\n</code></pre> <p>Splitting a string on the n<sup>th</sup> occurrence and rejoining the string.  </p> Syntax<pre><code>url = `https://blotter.sharepoint.com/site/subsite`\n\njoin(take(split(variables('url'),'/'),3), '/') \n\nresult: /site/subsite\n</code></pre>"},{"location":"microsoft/rest-api/","title":"SharePoint Rest API","text":""},{"location":"microsoft/rest-api/rest-api/","title":"SharePoint Rest APIs","text":""},{"location":"microsoft/rest-api/rest-api/#get-list-items","title":"Get List Items","text":"<p>There are two options to get list/library items, either the <code>GetByTitle</code> and <code>guid</code> endpoint.  The preferred way is to use the <code>guid</code> method.  Using the <code>GetByTitle</code> method could break if the list/library name gets changed.</p>"},{"location":"microsoft/rest-api/rest-api/#get-by-title","title":"Get By Title","text":"<p> GET <pre><code>_api/Web/Lists/GetByTitle('blotterLibrary')</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=verbose\",\n\"accept\": \"application/json;odata=verbose\"\n}</code></pre> </p>"},{"location":"microsoft/rest-api/rest-api/#get-by-guid","title":"Get By Guid","text":"<p> GET <pre><code>_api/Web/Lists(guid'84e5321e-c28d-4d8d-8a4a-5f377ad4bcf0')</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=nometadata\",\n\"accept\": \"application/json;odata=nometadata\"\n}</code></pre> </p> <p>Info</p> <p>Notice for both calls, a different header is used. Verbose will return more information which maybe be useful when first building the endpoint.  Nometadata will return minimal (specific) information requested.</p>"},{"location":"microsoft/rest-api/rest-api/#update-properites","title":"Update Properites","text":"<p>This example updates the metadata properties of a list/library item</p> <p> PATCH <pre><code>_api/Web/Lists(guid'84e5321e-c28d-4d8d-8a4a-5f377ad4bcf0')/items({ID})</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=verbose\",\n\"IF-MATCH\": \"*\",\n\"X-HTTP-Method\": \"PATCH\"\n}</code></pre> Body <pre><code>{\n\"__metadata\":\n{\n\"type\":\"SP.Data.BlotterLibraryItem\"\n},\n\"Document_x0020_Type\" :  \"DropDownItem\",\n\"Meeting_x0020_Date\" : \"2024-05-04\",\n\"Title\" : \"myFileName\",\n\"FileLeafRef\" : \"myFileName.docx\"\n}</code></pre> </p> <p>Warning</p> <p>In the body of the request for type, ensure the first letter of the list/library name is capitalized.  Example: Internal list name is blotterLibrary.  It must be BlotterLibrary in the request body.</p>"},{"location":"microsoft/rest-api/rest-api/#move-files","title":"Move Files","text":"<p>This example moves file to a new folder within the same library</p> <p> POST <pre><code>_api/SP.MoveCopyUtil.MoveFileByPath(overwrite=@a1)?@a1=true</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=verbose\",\n\"accept\": \"application/json;odata=verbose\"\n}</code></pre> Body <pre><code>{\n\"srcPath\": {\n\"__metadata\": {\n\"type\": \"SP.ResourcePath\"\n},\n\"DecodedUrl\": \"https://blotter.sharepoint.com/blotterLibrary/FileName.docx\"\n},\n\"destPath\": {\n\"__metadata\": {\n\"type\": \"SP.ResourcePath\"\n},\n\"DecodedUrl\": \"https://blotter.sharepoint.com/blotterLibrary/NewFolder/FileName.docx\"\n}\n}</code></pre> </p>"},{"location":"microsoft/rest-api/rest-api/#create-folder","title":"Create Folder","text":"<p>This example creates a new folder in a library</p> <p> POST <pre><code>_api/web/folders</code></pre> Headers <pre><code>{\n\"content-type\": \"application/json;odata=verbose\",\n\"accept\": \"application/json;odata=verbose\"\n}</code></pre> Body <pre><code>{\n\"__metadata\": {\n\"type\": \"SP.Folder\"\n},\n\"ServerRelativeUrl\": \"blotterLibrary/NewFolder\"\n}</code></pre> </p>"},{"location":"microsoft/sharepoint/","title":"SharePoint Main","text":"<ul> <li>Query Parameters</li> <li>Web Parts</li> </ul>"},{"location":"microsoft/sharepoint/query-parameters/","title":"Query Parameters","text":"<p>Filtering SharePoint libraries and lists via query string parameters</p> <p>Warning</p> <p>Refer to columns using their internal names and not the display names. Internal field names created with spaces will be encoded. Example Order Number will be encoded like Order_x0020_Number</p>"},{"location":"microsoft/sharepoint/query-parameters/#single-column-filter","title":"Single Column Filter","text":"Syntax<pre><code>https://blotter.sharepoint.com?FilterField1=Title&amp;FilterValue1=JIB-0111\n</code></pre> Syntax for Encoded Field<pre><code>https://blotter.sharepoint.com?FilterField1=Doc_x0020__x0023_&amp;FilterValue1=JIB-0111\n</code></pre>"},{"location":"microsoft/sharepoint/query-parameters/#multiple-column-filter","title":"Multiple Column Filter","text":"Syntax<pre><code>...sharepoint.com?FilterField1=Title&amp;FilterValue1=JIB-0111&amp;FilterField2=ApprovalStatus&amp;FilterValue2=Rejected\n</code></pre>"},{"location":"microsoft/sharepoint/query-parameters/#multi-values-filter","title":"Multi-Values Filter","text":"Syntax<pre><code>https://blotter.sharepoint.com?FilterName=Title&amp;FilterMultiValue=JIB-0111;SOP-0212;SJP-0025\n</code></pre>"},{"location":"microsoft/sharepoint/query-parameters/#wildcard-filter","title":"Wildcard Filter","text":"Syntax<pre><code>https://blotter.sharepoint.com?FilterName=Title&amp;FilterMultiValue=SJP-002*\n</code></pre> <p>Note</p> <p>Notice the change in syntax for the Multi-Value and Wildcard filters.</p>"},{"location":"microsoft/sharepoint/webparts/","title":"Web Parts","text":"<p>Note</p> <p>Source files should be uploaded to the Resources library at the root of each site collection. Example: https://blotter.sharepoint.com/resources/scripts/myfile.css</p>"},{"location":"microsoft/sharepoint/webparts/#script-editor-web-part","title":"Script Editor Web Part","text":"JavaScript References<pre><code>&lt;script\n  type=\"text/javascript\"\n  src=\"/resources/scripts/FieldServiceCalendar.js\"\n&gt;&lt;/script&gt;\n</code></pre> CSS References<pre><code>&lt;link\n  rel=\"stylesheet\"\n  type=\"text/css\"\n  href=\"/resources/scripts/hideEditFormRibbon.css\"\n/&gt;\n</code></pre>"},{"location":"microsoft/sharepoint/administration/","title":"SharePoint Administration","text":""},{"location":"microsoft/sharepoint/administration/patching/","title":"Patching SharePoint","text":""},{"location":"microsoft/sharepoint/administration/patching/#first-things","title":"First Things","text":"<ul> <li>Snapshot of all servers (Hypervisor)</li> <li>Backups of SQL Tables</li> <li>(Optional) Add <code>app_offline.htm</code> file at the root of each web application folder</li> </ul>"},{"location":"microsoft/sharepoint/administration/patching/#steps","title":"Steps","text":"<ol> <li> <p>Download CUs</p> <ul> <li>Best Resource: https://blog.stefan-gossner.com/</li> <li>Patch n-1 frequency</li> <li>There are always 2 files to install<ul> <li>If update runs from Windows update, it usually only installs just one of the files.</li> </ul> </li> </ul> </li> <li> <p>Copy CU files</p> <ul> <li>Create folder in D: on each SharePoint 2019 server (APPS1, FEDC1, FEDC2, SRCH1)<ul> <li>Folder Title: <code>YearMonth-CU</code></li> <li>Copy both files into the new folder</li> </ul> </li> </ul> </li> <li> <p>Log into Each Server as SharePoint Farm Admin</p> <ul> <li>Steps below should be executed as SharePoint Farm Admin</li> </ul> </li> <li> <p>Run EXEs</p> <ul> <li>Run CU on APPS1 1st<ul> <li>Install file starting with <code>sts</code> 1st - Run As <code>Admin</code></li> <li>Install file starting with <code>wssloc</code> - Run As <code>Admin</code></li> </ul> </li> <li>Install of APPS1 needs to be successful before proceeding to other servers</li> </ul> </li> <li> <p>STOP services on SRCH1</p> <ul> <li>Not stopping these services will increase the time to install CUs<ul> <li>SharePoint Search Host Controller</li> <li>SharePoint Server Search 16</li> <li>SharePoint Timer Service</li> </ul> </li> </ul> </li> <li> <p>Run CU install on all other servers</p> <ul> <li>Can be run at the same time</li> <li>Starting with <code>sts</code> file and then <code>wssloc</code> - Run as Admin</li> </ul> </li> <li> <p>Start services on SRCH1</p> <ul> <li>SharePoint Search Host Controller</li> <li>SharePoint Server Search 16</li> <li>SharePoint Timer Service</li> </ul> </li> <li> <p>RUN SharePoint Configuration Wizard from APPS1</p> <ul> <li>Run as <code>Admin</code></li> <li>Could Run from CMD: <code>PSConfig.exe -cmd upgrade -inplace b2b -wait -Force</code></li> <li>If Configuration Wizard Successful:<ul> <li>Confirm in IIS:<ol> <li>Each Web Application Pool is started</li> <li>Each Web site is started</li> <li>Services are running (SharePoint Services, WWW publishing Service, IIS Admin Service)</li> <li>Check Servers in Farm (<code>/_admin/FarmServers.aspx</code>) Status</li> </ol> </li> <li>Proceed to each server to run SharePoint Configuration Wizard:<ol> <li>Only Run 1 Configuration Wizard at a time</li> <li>Run as Admin</li> <li>Confirm Wizard is successful</li> </ol> </li> </ul> </li> <li>If Configuration Wizard Unsuccessful:<ul> <li>Clear config cache (Maybe just restart the server)</li> <li>Resolve errors and re-run configuration wizard</li> <li>Each time the wizard is run, it will create a log file. Link provided in failure message box.</li> <li>Don't proceed on to other servers until APPS1 errors are resolved.</li> <li>Running into issues.</li> </ul> </li> </ul> </li> <li> <p>POST PATCHING CHECKS</p> <ul> <li>Confirm Infowise TimerJobs are still installed, if not run Repair. (If upgrading Infowise and TimerJobs not present, must run repair on current version before upgrading.)</li> <li>Confirm Search is working</li> <li>Delete extra snapshots from Hypervisor. (Leave only the most recent snapshot)</li> </ul> </li> </ol>"},{"location":"microsoft/sharepoint/administration/patching/#scripts","title":"Scripts","text":"<pre><code>PSConfig.exe -cmd upgrade -inplace b2b -wait -cmd applicationcontent -install -cmd installfeatures -cmd secureresources -cmd services -install\n</code></pre>"},{"location":"node/","title":"Node","text":"<ul> <li> NVM</li> </ul>"},{"location":"node/nvm/","title":"NVM for Windows (Node Version Manager)","text":"<p>GitHub - NVM</p>"},{"location":"node/nvm/#what-is-nvm","title":"What is NVM?","text":"<p>NVM allows you to install different versions of Node, and switch between these versions depending on the project that you're working on via the command line.</p> <p>Previous Node Install</p> <p>Before proceeding, It is recommend that you uninstall Node.js if you have it installed already. This will prevent any conflicts with Node.js and nvm.</p>"},{"location":"node/nvm/#nvm-commands","title":"NVM Commands","text":"Command Description   nvm -v get Version  nvm list list all versions of Node installed  nvm install latest install the latest  nvm install lts install long term supported version  nvm install X.Y.Z install a specific version  nvm use X.Y.Z switch to a specific version  nvm alias default X.Y.Z make default node version  nvm on/off turns nvm on or off  nvm uninstall X.Y.Z"},{"location":"node/nvm/#install-dependencies","title":"Install Dependencies","text":"<ul> <li>After install of Node, switch to that Node version (nvm use X.Y.Z), then proceed to install dependencies on each version of Node.</li> <li>NPM: <code>npm install -g</code> or <code>npm install -g npm@4.6.1</code></li> <li>NPM Versions</li> </ul>"},{"location":"npm/","title":"NPM Commands","text":"<p>Below is a list of commonly used NPM commands along with their descriptions. These are useful for managing packages in your projects effectively.</p>"},{"location":"npm/#global-package-listing","title":"Global Package Listing","text":"<ul> <li>Lists all globally installed packages without displaying their dependencies.</li> </ul> <pre><code>npm list -global --depth=0\n</code></pre> <ul> <li>Lists all outdated globally installed packaages and list recommended updates</li> </ul> <pre><code>npm outdated -global\n</code></pre>"},{"location":"npm/#package-information","title":"Package Information","text":"<ul> <li>Displays detailed information about the specified npm package, including its release history, available versions, and more.</li> </ul> <pre><code>npm info jquery\n</code></pre> <ul> <li>Provides information about TypeScript definitions for the specified package. It\u2019s recommended to use a version that matches the installed npm package closely.</li> </ul> <pre><code>npm info @types/jquery\n</code></pre> <ul> <li>Displays all available versions of the specified package\u2019s TypeScript definitions in JSON format, preventing truncation of the version list.</li> </ul> <pre><code>npm show @types/jquery versions --json\n</code></pre>"},{"location":"npm/#installing-packages","title":"Installing Packages","text":"<ul> <li>Installs the latest version of the specified package into the project.</li> </ul> <pre><code>npm install jquery\n</code></pre> <ul> <li>Installs a specific version of the specified package.</li> </ul> <pre><code>npm install jquery@1.12.4\n</code></pre> <ul> <li>Installs the package and saves it to the <code>dependencies</code> list in the <code>package.json</code> file.</li> </ul> <pre><code>npm install jquery --save\n</code></pre>"},{"location":"npm/#npm-versioning-characters-explained","title":"NPM Versioning Characters Explained","text":"<p>Here is a comprehensive table explaining the various characters and notations used in npm versioning</p> <p>(Semver -Semantic Versioning):</p> Character/Notation Example Meaning Version Range Example Caret (<code>^</code>) <code>^1.10.2</code> Allows minor and patch updates, keeping the major version the same. <code>1.10.2</code> to <code>&lt;2.0.0</code> Tilde (<code>~</code>) <code>~1.10.2</code> Allows patch updates only, keeping the minor version the same. <code>1.10.2</code> to <code>&lt;1.11.0</code> Exact Version <code>1.10.2</code> Installs the specific version only. Only <code>1.10.2</code> Wildcard (<code>x</code>) <code>1.10.x</code> Matches any patch version for the specified major.minor version. <code>1.10.0</code>, <code>1.10.1</code>, <code>1.10.5</code>, etc. Wildcard (<code>*</code>) <code>*</code> Matches any version. This is risky as it could include breaking changes. Any available version Range (<code>-</code>) <code>1.5 - 1.10</code> Installs the latest version within the range, inclusive. <code>1.5.0</code> to <code>1.10.x</code> Greater/Less Than <code>&gt;1.10.2</code> Installs any version greater than the specified version. <code>1.10.3</code>, <code>2.0.0</code>, etc. Greater/Less Than <code>&lt;2.0.0</code> Installs any version less than the specified version. <code>1.0.0</code> to <code>1.999.999</code>, but not <code>2.0.0</code> Logical Ranges <code>&gt;=1.10.2 &lt;2.0.0</code> Combines range operators to define a specific range of versions. <code>1.10.2</code> to <code>&lt;2.0.0</code>"},{"location":"npm/#example-command-breakdown","title":"Example Command Breakdown","text":""},{"location":"npm/#command","title":"Command","text":"<pre><code>npm install @types/jquery@1.10.x --save-dev\n</code></pre>"},{"location":"npm/#explanation","title":"Explanation","text":"<ol> <li><code>@types/jquery</code>: The package name (scoped under <code>@types</code> for TypeScript definitions).</li> <li><code>@1.10.x</code>: Installs the latest patch version within the <code>1.10</code> minor version (e.g., <code>1.10.5</code>).</li> <li><code>--save-dev</code>: Adds the package to the <code>devDependencies</code> in your <code>package.json</code>.</li> </ol>"},{"location":"powershell/","title":"PowerShell Main","text":""},{"location":"powershell/pnp-powershell/","title":"PnP PowerShell Main","text":""},{"location":"powershell/pnp-powershell/#check-modules-installed","title":"Check Modules Installed","text":"<pre><code>    get-modules\n    get-modules SharePointPnpPowerShell2019 | Select Version\n</code></pre>"},{"location":"powershell/pnp-powershell/#check-available-cmdlet","title":"Check Available Cmdlet","text":"<pre><code>    get-command -Module SharePointPnpPowerShell2019\n</code></pre>"},{"location":"powershell/pnp-powershell/#connect-to-sharepoint","title":"Connect to SharePoint","text":"<pre><code>    $web = \"https://blotter.sharepoint.com\"\n    Connect-PnPOnline $web -CurrentCredentials\n</code></pre>"},{"location":"powershell/pnp-powershell/pnp-sharepoint-template/","title":"PnP SharePoint template with logging","text":"<p>Template base used for SharePoint scripts using PnP PowerShell. Template includes PnP connect and disconnect functions, as well as log to log file, Seq, and console logging.  </p> SharePoint Template with Logging<pre><code>&lt;##############################################\nAuthor:       \nDate:         \nDescription:  PnP SharePoint Template with Logging \nLocation:      \n##############################################&gt;\n\nparam (  \n    # Debug, Error, Fatal, Information, Verbose, Warning\n    [string] $MinLogLevel = \"Information\",\n    [switch] $seqLogging, # Writes to Seq\n    [switch] $debug, # Writes to network log file\n    [switch] $consoleLog, # Outputs to console, debug must be enabled\n    [string] $guid = [System.Guid]::NewGuid(), # Create unique GUID\n    [string] $logFileName = 'RenameFile-Log'\n)\n\n# Test Data\n$web = @{url = 'https://blotter.sharepoint.com' }\n#$list = 'SharePointListName' #@{Title = \"SharePointListName\" }\n#$itemid = 1\n\n# Imports/ Modules\n$scriptDirInfo = New-Object System.IO.DirectoryInfo($PSScriptRoot)\n$scriptParentDir = $scriptDirInfo.Parent.FullName\n. \\\\**UPDATE--ServerPath**\\PowerShell\\CommonLib.ps1 # Load the common library, Required for MSGraph token\n\n\n$shared = [System.IO.Path]::Combine($scriptParentDir, \"Shared\", \"Logging.ps1\")\n. $shared\nInitialize-Logging -MinLogLevel $MinLogLevel -CorrelationId $guid | Out-Null\n\n# Push logging comment to SeqLogging and WriteLog\nfunction log\n{\n    param(\n        [Parameter(Mandatory = $false)]\n        [switch] $includeSeq,\n\n        [Parameter(Mandatory = $false)]\n        [string] $logType,\n\n        [Parameter(Mandatory = $true)]\n        [string] $comment\n    )\n\n    # Send to logging functions\n    if ($includeSeq)\n    {\n        if ($logType) { SeqLogging -comment $comment -logType $logType } else { SeqLogging -comment $comment }\n    }\n    writeLog -comment $comment\n}\n\n# Seq Logging\nfunction seqLogging\n{\n    Param(\n        [string] $comment = 'n/a',\n        [string] $logType = 'Write-InfoLog'\n    )\n\n    if ($seqLogging)\n    {\n        &amp; $logType \"{list} | Comment: {Comment} \" -PropertyValues $list, $comment\n    }\n}\n\n# Debug Logging\nfunction writeLog\n{\n    Param(\n        [string] $comment\n    )\n\n    #debug file location\n    $logFile = Join-Path $PSScriptRoot \"$logFileName.log\"\n\n    $maxLogSize = 1MB\n    if ((Test-Path $logFile) -AND (Get-Item $logFile).Length -gt $maxLogSize)\n    {\n        Clear-Content $logFile\n        writeLog -comment (\"Log file cleared due to {0}MB size limit\" -f ($maxLogSize / 1MB))\n    }\n\n    if ($debug)\n    {\n        $timeStamp = Get-Date -Format \"MM/dd/yyyy HH:mm:ss\"\n        $logMessage = \"$timeStamp -- $comment\"\n        Add-Content $logFile -value $logMessage\n    }\n\n    if ($consoleLog)\n    {\n        Write-Host -f Cyan $comment\n    }\n}\n\n# PnP Connect\nfunction connect()\n{\n    writeLog -comment $(\"-\" * 50)\n    try\n    {\n        $connect = Connect-PnPOnline $web.Url -CurrentCredentials -ReturnConnection\n        log -comment (\"Connect-PnPOnline connection success. {0}\" -f $web.Url)\n        return $connect\n    }\n    catch\n    {\n        log -logType 'Write-ErrorLog' -includeSeq -comment 'Connect-PnPOnline connection failed'\n    }\n}\n\n# PnP Disconnect\nfunction disconnect($connect)\n{\n    try\n    {\n        # PnP Disconnect \n        Disconnect-PnPOnline -Connection $connect\n        log -comment 'Connect-PnPOnline connection closed'\n    }\n    catch\n    {\n        log -logType 'Write-ErrorLog' -includeSeq -comment 'Connect-PnPOnline disconnect failed'\n    }\n}\n\nfunction MainScript()\n{\n    try\n    {\n        # Connect to PnP\n        $connect = connect\n\n        log -comment \"Logging function is working...\"\n\n\n        # Disconnect PnP\n        disconnect $connect\n    }\n    catch\n    {\n        # Add to log\n        log -logType 'Write-ErrorLog' -includeSeq -comment (\"MainScript: {0} on line {1}\" -f $_.Exception.message, ($_.InvocationInfo.ScriptLineNumber))\n    }\n}\n\n# Run Script\nMainScript\nClose-Logger\n</code></pre>"},{"location":"research/todo/","title":"TODO / Reading List","text":"<ul> <li>Fab Academy - Abby Aresty</li> <li>David Wells</li> <li>Maps Alive</li> <li>Chris Lee - SVG Map</li> <li>SVG Map</li> <li>SVG Animation</li> <li>HTML/CSS Toggle</li> </ul>"},{"location":"research/todo/#ai-stuff","title":"AI Stuff","text":"<ul> <li>Moondream1 Locally</li> </ul>"},{"location":"slack/","title":"Slack","text":"<ul> <li> { style=\"color:#7c0480\" } Webhooks</li> <li> { style=\"color:#3eb991\" } Message Builder</li> </ul>"},{"location":"slack/webhooks/","title":"Sending Messages with Webhooks","text":"<p>Incoming webhooks are a simple way to post messages from apps into Slack. When you create an incoming webhook, Slack provides a unique URL to which you send a JSON payload containing the message and formatting options. These webhooks support all standard formatting and layout blocks for rich message content.</p>"},{"location":"slack/webhooks/#create-a-slack-app","title":"Create a Slack App","text":"<p>First, create a Slack app:</p> <ul> <li>Choose a name for your app.</li> <li>Associate it with a Slack workspace.</li> <li>Optionally, create a dedicated channel for testing.</li> </ul> <p>Once your app is created, you'll be redirected to its settings page.</p>"},{"location":"slack/webhooks/#enable-incoming-webhooks","title":"Enable Incoming Webhooks","text":"<p>From your app's settings:</p> <ul> <li>Select Incoming Webhooks from the sidebar.</li> <li>Toggle the Activate Incoming Webhooks option to <code>on</code>.</li> </ul> <p>Manage existing apps: App Management Dashboard</p>"},{"location":"slack/webhooks/#create-an-incoming-webhook","title":"Create an Incoming Webhook","text":"<p>With webhooks enabled, new options appear:</p> <ul> <li>Click the Add New Webhook to Workspace button.</li> <li>Choose a channel for the webhook to post to.</li> <li>Click Authorize.</li> </ul> <p>Slack will redirect you back to the app settings, where a webhook URL will now appear under Webhook URLs for Your Workspace.</p> <p>Example URL:</p> <pre><code>https://hooks.slack.com/services/T00000000/B00000000/XXXXXXX\n</code></pre> <p>This URL is specific to your app and the channel you selected.</p> <p>Danger</p> <p>Do not share your webhook URL publicly. It is a secret and can be used to post to your Slack workspace.</p>"},{"location":"slack/webhooks/#send-a-message","title":"Send a Message","text":"<p>To post a message using your webhook, make an HTTP POST request with a JSON body.</p> <p>Example:</p> <pre><code>POST https://hooks.slack.com/services/T00000000/B00000000/XXXXXXX\nContent-type: application/json\n\n{\n    \"text\": \"Hello, world.\"\n}\n</code></pre> <p>Reference:  Slack Webhooks</p>"},{"location":"spfx/","title":"SharePoint Framework","text":""},{"location":"spfx/spfx-basics/","title":"Creating an SPFx Project","text":"<p>Open <code>cmd</code> command prompt</p>"},{"location":"spfx/spfx-basics/#nvm","title":"NVM","text":"Verify NVM Setup<pre><code>C:\\Users\\blotter&gt; nvm list\n</code></pre> Verify NPM Packages<pre><code>C:\\Users\\blotter&gt; npm list -g --depth=0\n</code></pre>"},{"location":"spfx/spfx-basics/#create-project-folder","title":"Create Project Folder","text":"Navigating Folders<pre><code>C:\\Users\\blotter&gt; cd repos\n</code></pre> Create Project Directory<pre><code>C:\\Users\\blotter\\repos&gt; mkdir demoproject\n</code></pre> Navigate to new Project Directory<pre><code>C:\\Users\\blotter\\repos&gt; cd demoproject\n</code></pre>"},{"location":"spfx/spfx-basics/#creating-sharepoint-project","title":"Creating SharePoint Project","text":"Run Yeoman Generator<pre><code>C:\\Users\\blotter\\repos\\demoproject&gt; yo @microsoft/sharepoint\n</code></pre> <ul> <li> Solution name - name of project (advise all lowercase/no spaces)</li> <li> Where to place files - current folder</li> <li> Admin deploy solution - controls how project is deployed, can be changed</li> <li> Client-side solution - options are webpart or extension</li> <li> Web part name - your choice, typically the same as solution name</li> <li> Web part description - enter description</li> <li> Frawework - options are no JS framework, React, Knockout</li> </ul>"},{"location":"spfx/spfx-basics/#install-development-certificate","title":"Install Development Certificate","text":"Install Development Certificate<pre><code>C:\\Users\\blotter\\repos\\demoproject&gt; gulp trust-dev-cert\n</code></pre> <p>Note</p> <p>This command just needs run once on the development machine. It is not local to the project folder. This allows <code>Gulp</code> to serve the project up in the hosted workbench with a trusted certificate</p> <p>Warning</p> <p>It may prompt you for credentials to install the dev certificate</p>"},{"location":"spfx/spfx-basics/#update-workbench","title":"Update Workbench","text":"<p>Microsoft has deprecated the local workbench starting with <code>SPFx v1.13</code> and only supports the hosted workbench served from a SharePoint site.  Append <code>_layouts/15/workbench.aspx</code> to the url where you will be testing the <code>SPFx</code> solution.</p> <p>Inside your project navigate to the config folder, then <code>server.json</code> file.  Then update the <code>initialPage</code> property inside the file.</p> <p></p>"},{"location":"spfx/spfx-basics/#running-project","title":"Running Project","text":"<p>Preview and test the client-side web part in the SharePoint hosted workbench</p> Run Project<pre><code>gulp serve\n\ngulp serve --nobrowser\n</code></pre> <p></p> <p></p>"},{"location":"spfx/spfx-basics/#important-project-files","title":"Important Project Files","text":"File Description  package.json Manages dependencies  serve.json Configures local environment  mystrings.d.ts Manages localization  WebPart.manifest.json Manages localization  WebPart.ts Main file manages imports, web part class, render method"},{"location":"spfx/spfx-basics/#webpart-file-components","title":"Webpart File Components","text":""},{"location":"spfx/spfx-basics/#imports","title":"Imports","text":"<p>Imports: Includes necessary libraries such as React, SharePoint types, and custom components required for the web part.</p> <p></p>"},{"location":"spfx/spfx-basics/#web-part-class","title":"Web Part Class","text":"<p>The main TypeScript class that extends <code>BaseClientSideWebPart</code>. It defines the core logic, including lifecycle methods.</p> <p></p>"},{"location":"spfx/spfx-basics/#render-method","title":"Render Method","text":"<p>This function is responsible for outputting the <code>HTML</code> content of the web part. It can include <code>JSX</code> (if using <code>React</code>) or plain <code>DOM</code> manipulation.</p> <p></p>"},{"location":"spfx/spfx-basics/#property-pane-configuration","title":"Property Pane Configuration","text":"<p>Defines customizable properties for the web part.</p> <p></p>"},{"location":"spfx/spfx-css/","title":"SPFx CSS","text":"<p>Microsoft uses CSS modules to ensure specificity of classes between <code>SPFx</code> solutions deployed on a SharePoint page by appending a # suffix to each class.  This ensures the classes are scoped to your webpart.</p>"},{"location":"spfx/spfx-css/#css-override","title":"CSS Override","text":"<p>To override the suffix being appended</p> Global override<pre><code>: global {\n    .welcome {\n        text-align:  center;\n    }\n}\n</code></pre>"},{"location":"spfx/spfx-kendo-jquery/","title":"SPFx with Kendo JQuery","text":"<p>Provide guidance on configuring an SPFx project to use Kendo UI JQuery. This example shows using KendoGrid</p> Find Clink Directory<pre><code>C:\\Users\\blotter&gt;clink info\n</code></pre>"},{"location":"spfx/spfx-kendo-jquery/#config-folder","title":"Config Folder","text":"confg/config.json<pre><code>// Add the follwing to the externals attribute\n\n\"externals\": {\n    \"jquery\": {\n    \"path\": \"https://code.jquery.com/jquery-1.12.4.min.js\",\n    \"globalName\": \"JQuery\"\n    },\n    \"kendo\": {\n    \"path\": \"https://kendo.cdn.telerik.com/2024.4.1112/js/kendo.all.min.js\",\n    \"globalName\": \"kendo\",\n    \"globalDependencies\": [\"jquery\"]\n    }\n}\n</code></pre>"},{"location":"spfx/spfx-kendo-jquery/#package-json","title":"Package JSON","text":"package.json<pre><code>// Example of the dependancies and devDependancies setup\n\n\"dependencies\": {\n    \"@microsoft/sp-core-library\": \"~1.4.0\",\n    \"@microsoft/sp-lodash-subset\": \"~1.4.0\",\n    \"@microsoft/sp-office-ui-fabric-core\": \"~1.4.0\",\n    \"@microsoft/sp-webpart-base\": \"~1.4.0\",\n    \"@progress/kendo-ui\": \"^2024.4.1112\",\n    \"@types/es6-promise\": \"0.0.33\",\n    \"@types/webpack-env\": \"1.13.1\",\n    \"jquery\": \"1.12.4\"\n},\n\"devDependencies\": {\n    \"@microsoft/sp-build-web\": \"~1.4.1\",\n    \"@microsoft/sp-module-interfaces\": \"~1.4.1\",\n    \"@microsoft/sp-webpart-workbench\": \"~1.4.1\",\n    \"@types/chai\": \"3.4.34\",\n    \"@types/jquery\": \"^1.10.45\",\n    \"@types/kendo-ui\": \"^2023.2.5\",\n    \"@types/mocha\": \"2.2.38\",\n    \"ajv\": \"~5.2.2\",\n    \"gulp\": \"~3.9.1\"\n}\n</code></pre>"},{"location":"spfx/spfx-kendo-jquery/#tsconfig-json","title":"TSConfig JSON","text":"<p>Configured for  ES2017</p> tsconfig.json<pre><code>{\n  \"compilerOptions\": {\n    \"target\": \"es2017\",  // Change from es5 to es2017\n    \"forceConsistentCasingInFileNames\": true,\n    \"module\": \"commonjs\",\n    \"moduleResolution\": \"node\",\n    \"jsx\": \"react\",\n    \"declaration\": true,\n    \"sourceMap\": true,\n    \"experimentalDecorators\": true,\n    \"skipLibCheck\": true,\n    \"typeRoots\": [\"./node_modules/@types\", \"./node_modules/@microsoft\"],\n    \"types\": [\"es6-promise\", \"webpack-env\"],\n    \"lib\": [\"es5\", \"dom\", \"es2017\"]  // Ensure es2017 is included here\n  }\n}\n</code></pre>"},{"location":"spfx/spfx-kendo-jquery/#web-part-file","title":"Web Part File","text":"src/webparts/PROJECTNAME/PROJECTNAMEWebPart.ts<pre><code>// Imports\nimport { SPComponentLoader } from \"@microsoft/sp-loader\";\n\n// jQuery import\nimport * as $ from \"jquery\";\n\n// Kendo-ui import\nimport \"kendo\";\n\n//  Default class\nexport default class SpFxKendoJQueryDemoWebPart extends BaseClientSideWebPart&lt;ISpFxKendoJQueryDemoWebPartProps&gt; {\n  public render(): void {\n    SPComponentLoader.loadCss(\n      \"https://unpkg.com/@progress/kendo-theme-bootstrap@10.0.0/dist/bootstrap-main.css\"\n    );\n\n    if(!this.renderedOnce){\n    this.domElement.innerHTML = `\n        &lt;div id='ordersGrid'&gt;&lt;/div&gt;\n    `;\n    }\n\n    (&lt;any&gt;$(\"#ordersGrid\")).kendoGrid({\n      columns: [\n        // The field matches the ID property in the data array.\n        { field: \"ProductID\", title: \"Product ID\", width: \"50px\" },\n        { field: \"ProductName\", title: \"Product Name\", width: \"150px\" },\n        { field: \"QuantityPerUnit\", title: \"Quanity\", width: \"200px\" }\n      ],\n      dataSource: {\n        data: Products,\n        pageSize: 5\n      },\n      toolbar: [\"search\"],\n      search: {\n        fields: [\n          { name: \"ProductID\", operator: \"eq\" },\n          { name: \"ProductName\", operator: \"contains\" },\n          { name: \"QuantityPerUnit\", operator: \"contains\" }\n        ]\n      },\n      pageable: {\n        pageSizes: [5, 10, 20, \"all\"]\n        // alwaysVisible: true,\n      }\n    });\n  }\n</code></pre> <p>Note</p> <p>Wrapping the <code>domElement</code> in <code>renderOnce</code> condition will ensure the div is not rendered multiple times.</p> Rendered Once<pre><code>public render(): void {\n    if (!this.renderedOnce) {\n        &lt;div class=\"${ styles.container}\"&gt;Blotter\n        &lt;/div&gt;\n    }\n}\n</code></pre>"},{"location":"spfx/spfx-linting/","title":"Linting Setup","text":""},{"location":"spfx/spfx-linting/#prettier","title":"Prettier","text":"<p>Recommended configuration for <code>Prettier</code></p> <p>Create <code>.prettierrc</code> file in the root of the project</p> .prettierrc<pre><code>  {\n    \"singleQuote\": true,\n    \"tabWidth\": 2,\n    \"semi\": true,\n    \"trailingComma\": \"es5\",\n    \"printWidth\": 80\n  }\n</code></pre>"},{"location":"spfx/spfx-linting/#ts-lint","title":"TS Lint","text":"<p>Recommended configuration for <code>TS lint</code></p> <p>Add the following to the base settings for the <code>tslint.json</code> file</p> tslint.json<pre><code>    \"trailing-comma\": [\n      false,\n      {\n      \"multiline\": \"always\",\n      \"singleline\": \"never\"\n      }\n    ],\n    \"comma-dangle\": \"off\"\n</code></pre>"},{"location":"spfx/spfx-resources/","title":"SharePoint Framework Developer Resources","text":"<ul> <li>SharePoint Framework Developer</li> <li>GitHub SharePoint</li> <li>GitHub PnP</li> <li>GitHub SP Dev Docs</li> <li>Tech Community (MS)</li> </ul>"},{"location":"spfx/spfx-setup/","title":"Developer Environment Setup","text":""},{"location":"spfx/spfx-setup/#compatibility-table","title":"Compatibility Table","text":"SPFx Node.js (LTS) TypeScript React 1.19.0 v18 v4.5, v4.7 v17.0.1 1.18.2 v16, v18 v4.5, v4.7 v17.0.1 1.18.1 v16, v18 v4.5, v4.7 v17.0.1 ------ ------ ------ ------ 1.4.1 v6, v8 v2.4 v15"},{"location":"spfx/spfx-setup/#nvm-setup-and-commands","title":"NVM Setup and Commands","text":"<p>NVM</p>"},{"location":"spfx/spfx-setup/#check-global-packages-installed","title":"Check global packages installed","text":"<p>Check which npm packages are installed on the current version of <code>Node</code> by running the following command.</p> List all npm packages<pre><code>npm list -g --depth=0\n</code></pre> Check outdated npm packages<pre><code>npm outdated -g\n</code></pre> Get details of npm package<pre><code>npm info @microsoft/generator-sharepoint\n</code></pre>"},{"location":"spfx/spfx-setup/#install-nodejs","title":"Install Node.Js","text":"<p>Note</p> <p>See above for <code>NVM</code> for installing Node.  The preference is to use <code>NVM</code> so multiple versions of <code>Node.js</code> can be installed on your development computer.</p> <p>SharePoint 2019 Setup</p>"},{"location":"spfx/spfx-setup/#install-yeoman","title":"Install Yeoman","text":"<p>Yeoman Website</p> <p>Yeoman is a generic scaffolding system allowing the creation of any kind of app. It allows for rapidly getting started on new projects and streamlines the maintenance of existing projects.</p> <p>Yeoman is language agnostic. It can generate projects in any language (Web, Java, Python, C#, etc.)</p> <p>Warning</p> <p>The installed generator <code>Yeoman</code> does not need to match the installed version of the SharePoint Framework <code>SPFx</code>.  But wait, it does!!  For SharePoint 2019 on-premise the installed version of <code>Yeoman</code> needs to be yo@3.1.1</p> <pre><code>npm install yo --global\n</code></pre>"},{"location":"spfx/spfx-setup/#install-typescript","title":"Install TypeScript","text":"<p>TypeScript is installed by the generator locally to the project when <code>npm</code> install is run.</p>"},{"location":"spfx/spfx-setup/#gulp","title":"Gulp","text":"<p>Gulp Website</p> <pre><code>npm install -g gulp-cli\n</code></pre> <p>Info</p> <p>All previous versions of <code>SPFx</code> starting with v1.12.1 are only supported with <code>Gulp v3</code>. Starting with <code>Node v12</code> and higher <code>Gulp v4</code> is only supported.</p>"},{"location":"spfx/spfx-setup/#sharepoint-2019-setup","title":"SharePoint 2019 Setup","text":"<p>Andrew Connel Recommendation</p> <p>Development environment sweet spot for creating SPFx 1.4.1 projects for SharePoint Server 2019:</p> <ul> <li> Node.js LTS v8 (specifically, Node.js v8.17.0)</li> <li> Gulp-CLI v2.3.0</li> <li> Yeoman generator for the SharePoint Framework v1.10.0</li> <li> Yeoman v3.1.1</li> </ul> <pre><code>npm install gulp-cli@2.3.0 yo@3.1.1 @microsoft/generator-sharepoint@1.10.0 --global\n</code></pre>"},{"location":"terminal/","title":"Terminal Main","text":"<ul> <li> CMD Reference</li> <li> Terminal Configuration</li> <li> Winget</li> </ul>"},{"location":"terminal/cmd-reference/","title":"CMD Reference","text":""},{"location":"terminal/cmd-reference/#environment-variables","title":"Environment Variables","text":"<pre><code>// Get all environment variables\nset\n\n// Set a variable\nset Folder=MyNewFolder\nmkdir %Folder%\n</code></pre>"},{"location":"terminal/cmd-reference/#file-and-directory-management","title":"File and Directory Management","text":""},{"location":"terminal/cmd-reference/#paths","title":"Paths","text":"<pre><code>// Change path\ncd Users\\blotter\\Downloads\n\n// Change path (up 1 level)\ncd ..\n</code></pre>"},{"location":"terminal/cmd-reference/#directory-operations","title":"Directory Operations","text":"<pre><code>// View directory contents\ndir\n\n// Make a directory\nmkdir MyFolder\n\n// Make and move to a directory\nmkdir MyFolder &amp;&amp; cd MyFolder\n</code></pre>"},{"location":"terminal/cmd-reference/#file-operations","title":"File Operations","text":"<pre><code>// Create a file\necho \"My Content\" &gt; file.txt\n\n// Remove a file\ndel file.txt\n</code></pre>"},{"location":"terminal/cmd-reference/#system-commands","title":"System Commands","text":"<pre><code>// Open Group Policy Editor\ngpedit.msc\n\n// Shutdown system immediately\nshutdown -r -t 0\n\n// Open File Explorer in current path\nstart .\n</code></pre>"},{"location":"terminal/terminal-config/","title":"Terminal configuration","text":"<p>Instruction for Windows terminal setup and configuration using Oh My Posh</p> <p>Info</p> <p>To display all icons it is recommended to install Nerd Font</p>"},{"location":"terminal/terminal-config/#install-nerd-font","title":"Install Nerd Font","text":"<p>Install Nerd Font from the website.  Recommend using <code>BlexMono Nerd Font</code></p> <p>Install method via Drag and Drop</p> <ol> <li> <p>Open the Fonts folder</p> <ul> <li>Press <code>Win + R</code> to open the run dialog</li> <li>Type <code>Control Fonts</code> and press <code>Enter</code> to open the Fonts folder</li> </ul> </li> <li> <p>Unzip the font file downloaded</p> </li> <li>Drag and drop<ul> <li>Drag the font file from the File Explorer into the Fonts window.     Windows will automatically install the font</li> </ul> </li> <li>Update individual application settings to use the Nerd Font</li> </ol>"},{"location":"terminal/terminal-config/#install-oh-my-posh","title":"Install Oh My Posh","text":"<p>Install <code>oh-my-posh</code> on windows using <code>winget</code></p> SearchInstall <p>Search for <code>oh-my-posh</code> package on <code>winget</code>. Use the package <code>Id</code> in the install command. </p> <pre><code>C:\\Users\\blotter&gt;winget search oh-my-posh\n\nName       Id                      Version Match               Source\n----------------------------------------------------------------------\noh-my-posh XP8K0HKJFRXGCK          Unknown                     msstore\nOh My Posh JanDeDobbeleer.OhMyPosh 24.19.0 Moniker: oh-my-posh winget\n</code></pre> <p>Using the <code>Id</code> from the package install <code>oh-my-posh</code></p> <pre><code>C:\\Users\\blotter&gt;winget install JanDeDobbeleer.OhMyPosh\n</code></pre>"},{"location":"terminal/terminal-config/#install-clink","title":"Install Clink","text":"<p>Install <code>Clink</code> on Windows using <code>winget</code>. Clink is used due to no out-of-th-box support for Windows CMD for custom prompts.</p> SearchInstall <p>Search for <code>Clink</code> package on <code>winget</code>. Use the package <code>Id</code> in the install command. </p> <pre><code>C:\\Users\\blotter&gt;winget search Clink\n\nName        Id                Version  Match        Source\n----------------------------------------------------------\nClink       chrisant996.Clink 1.7.7                 winget\n</code></pre> <p>Using the <code>Id</code> from the package install <code>Clink</code></p> <pre><code>C:\\Users\\blotter&gt;winget install chrisant996.Clink\n</code></pre>"},{"location":"terminal/terminal-config/#configure-powershell-terminal","title":"Configure PowerShell terminal","text":"<p>Setup for PowerShell terminal requires a change to your <code>$PROFILE</code></p> <ol> <li> <p>Locating your Profile and view file contents</p> Locate FileView File <pre><code>C:\\Users\\blotter&gt; $PROFILE\n\nOutput:\nC:\\Users\\blotter\\Documents\\WindowsPowerShell\\profile.ps1\n</code></pre> <pre><code>C:\\Users\\blotter&gt; cat $PROFILE\n\nOutput:\nImport-Module posh-git\nImport-Module PoShLog\noh-my-posh init pwsh --config 'https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/kushal.omp.json' | Invoke-Expression\n</code></pre> </li> <li> <p>Open the file and add the following to the file</p> <pre><code>// Reference local theme\noh-my-posh init pwsh --config C:/Users/blotter/themefolder/jandedobbeleer.omp.json | Invoke-Expression\n\n// Reference remote theme\noh-my-posh init pwsh --config 'https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/kushal.omp.json' | Invoke-Expression\n</code></pre> </li> <li> <p>Reload PowerShell Profile</p> <pre><code>C:\\Users\\blotter&gt; . $PROFILE\n</code></pre> </li> </ol> <p>Final configuration should look similar to this:</p> <p></p> <p>Tip</p> <p>Remember to update font preferences in each PowerShell applicaiton to use the Nerd Font</p>"},{"location":"terminal/terminal-config/#configure-cmd-terminal","title":"Configure CMD terminal","text":"<ol> <li> <p>Ensure Install Clink step completed</p> </li> <li> <p>Create a new file called <code>oh-my-posh.lua</code> in the <code>Clink</code> program directory folder</p> Find Clink Directory<pre><code>C:\\Users\\blotter&gt;clink info\n</code></pre> </li> <li> <p>Add the following line to the <code>oh-my-pos.lua</code> file</p> oh-my-pos.lua<pre><code>// Reference local theme\nload(io.popen('oh-my-posh init cmd --config C:/Users/blotter/jandedobbeleer.omp.json'):read(\"*a\"))()\n\n// Reference remote theme\nload(io.popen('oh-my-posh init cmd --config \"https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/kushal.omp.json'):read(\"*a\"))()\n</code></pre> </li> </ol> <p>Final configuration should look similar to this:</p> <p></p> <p>Tip</p> <p>Remember to update font preferences in each <code>Windows Terminal</code> profile to use the Nerd Font</p> Custom Themes Custom kushal theme <pre><code>{\n\"$schema\": \"&lt;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json&gt;\",\n\"console_title_template\": \"{{ if .Root }}root @ {{ end }}{{ .Shell }} in {{ .Folder }}\",\n\"blocks\": [\n{\n    \"alignment\": \"left\",\n    \"segments\": [\n    {\n        \"background\": \"#575656\",\n        \"foreground\": \"#D6DEEB\",\n        \"leading_diamond\": \"\\ue0b2\",\n        \"properties\": {\n        \"alpine\": \"\\uf300\",\n        \"arch\": \"\\uf303\",\n        \"centos\": \"\\uf304\",\n        \"debian\": \"\\uf306\",\n        \"elementary\": \"\\uf309\",\n        \"fedora\": \"\\uf30a\",\n        \"gentoo\": \"\\uf30d\",\n        \"linux\": \"\\ue712\",\n        \"macos\": \"\\ue711\",\n        \"manjaro\": \"\\uf312\",\n        \"mint\": \"\\uf30f\",\n        \"opensuse\": \"\\uf314\",\n        \"raspbian\": \"\\uf315\",\n        \"ubuntu\": \"\\uf31c\",\n        \"windows\": \"\\ue70f\"\n        },\n        \"style\": \"diamond\",\n        \"template\": \" {{ if .WSL }}\\ue712 on {{ end }}{{ .Icon }} \",\n        \"type\": \"os\"\n    },\n    {\n        \"background\": \"#00C7FC\",\n        \"foreground\": \"#011627\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"style\": \"powerline\",\n        \"template\": \" \\uf489 {{ .Name }} \",\n        \"type\": \"shell\"\n    },\n    {\n        \"background\": \"#EF541C\",\n        \"foreground\": \"#D6DEEB\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"style\": \"powerline\",\n        \"template\": \" \\uf09c admin \",\n        \"type\": \"root\"\n    },\n    {\n        \"type\": \"cmake\",\n        \"style\": \"powerline\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"foreground\": \"#E8EAEE\",\n        \"background\": \"#1E9748\",\n        \"template\": \" \\ue61e \\ue61d cmake {{ .Full }} \"\n    },\n    {\n        \"type\": \"python\",\n        \"style\": \"powerline\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"properties\": {\n        \"display_mode\": \"context\"\n        },\n        \"foreground\": \"#011627\",\n        \"background\": \"#FFDE57\",\n        \"template\": \"{{ if .Venv }}\ud83d\udc0d veno {{ end }}\"\n    },\n    {\n        \"type\": \"go\",\n        \"style\": \"powerline\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"foreground\": \"#ffffff\",\n        \"background\": \"#7FD5EA\",\n        \"template\": \" \\u202d\\ue626 {{ .Full }} \"\n    },\n    {\n        \"type\": \"rust\",\n        \"style\": \"powerline\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"foreground\": \"#193549\",\n        \"background\": \"#99908A\",\n        \"template\": \" \\ue7a8 {{ .Full }} \"\n    },\n    {\n        \"background\": \"#1BD4CD\",\n        \"background_templates\": [\n        \"{{ if or (.Working.Changed) (.Staging.Changed) }}#16B1AC{{ end }}\",\n        \"{{ if and (gt .Ahead 0) (gt .Behind 0) }}#16B1AC{{ end }}\",\n        \"{{ if gt .Ahead 0 }}#B787D7{{ end }}\",\n        \"{{ if gt .Behind 0 }}#B787D7{{ end }}\"\n        ],\n        \"foreground\": \"#011627\",\n        \"powerline_symbol\": \"\\ue0b0\",\n        \"properties\": {\n        \"branch_icon\": \"\\ue725 \",\n        \"fetch_stash_count\": true,\n        \"fetch_status\": true,\n        \"fetch_upstream_icon\": true,\n        \"fetch_worktree_count\": true\n        },\n        \"style\": \"powerline\",\n        \"template\": \" {{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }} \\uf044 {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}&lt;#CAEBE1&gt; \\uf046 {{ .Staging.String }}&lt;/&gt;{{ end }}{{ if gt .StashCount 0 }} \\ueb4b {{ .StashCount }}{{ end }} \",\n        \"type\": \"git\"\n    }\n    ],\n    \"type\": \"prompt\"\n},\n{\n    \"alignment\": \"right\",\n    \"segments\": [\n    {\n        \"background\": \"#03DED3\",\n        \"background_templates\": [\"{{ if gt .Code 0 }}#E44141{{ end }}\"],\n        \"foreground\": \"#414141\",\n        \"foreground_templates\": [\"{{ if gt .Code 0 }}#D6DEEB{{ end }}\"],\n        \"leading_diamond\": \"\\ue0b6\",\n        \"properties\": {\n        \"always_enabled\": true\n        },\n        \"style\": \"diamond\",\n        \"template\": \" {{ if gt .Code 0 }}\\uf00d{{ else }}\\uf00c{{ end }} \",\n        \"type\": \"status\"\n    },\n    {\n        \"background\": \"#575656\",\n        \"foreground\": \"#D6DEEB\",\n        \"properties\": {\n        \"style\": \"roundrock\",\n        \"threshold\": 0\n        },\n        \"style\": \"diamond\",\n        \"template\": \" \\uf252 {{ .FormattedMs }} \",\n        \"trailing_diamond\": \"\\ue0b4\",\n        \"type\": \"executiontime\"\n    }\n    ],\n    \"type\": \"prompt\"\n},\n{\n    \"alignment\": \"left\",\n    \"newline\": true,\n    \"segments\": [\n    {\n        \"foreground\": \"#D6DEEB\",\n        \"style\": \"plain\",\n        \"template\": \"\\u256d\\u2500\",\n        \"type\": \"text\"\n    },\n    {\n        \"foreground\": \"#F2D3B6\",\n        \"properties\": {\n        \"time_format\": \"&lt;#D6DEEB&gt;\\ue641 15:04:05&lt;/&gt; &lt;#79DFE1&gt;|&lt;/&gt; \\uf073 2 Jan, Monday\"\n        },\n        \"style\": \"plain\",\n        \"template\": \"{{ .CurrentDate | date .Format }} &lt;#79DFE1&gt;|&lt;/&gt;\",\n        \"type\": \"time\"\n    },\n    {\n        \"foreground\": \"#32CD32\",\n        \"leading_diamond\": \"&lt;/&gt;\",\n        \"properties\": {\n        \"home_icon\": \"\\ueb06\",\n        \"folder_separator_icon\": \" \\uf061 \",\n        \"style\": \"agnoster_full\",\n        \"max_depth\": 3\n        },\n        \"style\": \"diamond\",\n        \"template\": \"{{ if .Root }} {{ .Parent }} {{else}} {{ .Path }} {{end}}\",\n        \"type\": \"path\"\n    }\n    ],\n    \"type\": \"prompt\"\n},\n{\n    \"alignment\": \"left\",\n    \"newline\": true,\n    \"segments\": [\n    {\n        \"foreground\": \"#D6DEEB\",\n        \"style\": \"plain\",\n        \"template\": \"\\u2570\\u2500\",\n        \"type\": \"text\"\n    },\n    {\n        \"foreground\": \"#D6DEEB\",\n        \"properties\": {\n        \"always_enabled\": true\n        },\n        \"style\": \"plain\",\n        \"template\": \"\\u276f \",\n        \"type\": \"status\"\n    }\n    ],\n    \"type\": \"prompt\"\n}\n],\n\"osc99\": true,\n\"transient_prompt\": {\n\"background\": \"transparent\",\n\"foreground\": \"#FEF5ED\",\n\"template\": \"\\ue285 \"\n},\n\"secondary_prompt\": {\n\"background\": \"transparent\",\n\"foreground\": \"#D6DEEB\",\n\"template\": \"\\u2570\\u2500\\u276f \"\n},\n\"version\": 3\n}\n</code></pre>"},{"location":"terminal/winget/","title":"Winget","text":""},{"location":"terminal/winget/#using-winget-from-command-line","title":"Using winget from command line","text":"List winget packages installed<pre><code>C:\\Users\\blotter&gt;winget list oh-my\n</code></pre> Search for winget packages<pre><code>C:\\Users\\blotter&gt;winget search oh-my-posh\n\n:: Results\nName       Id                      Version Match               Source\n----------------------------------------------------------------------\noh-my-posh XP8K0HKJFRXGCK          Unknown                     msstore\nOh My Posh JanDeDobbeleer.OhMyPosh 24.19.0 Moniker: oh-my-posh winget\n</code></pre> Install winget package<pre><code>:: Grab the ID from the output of search\nC:\\Users\\blotter&gt;winget install JanDeDobbeleer.OhMyPosh\n</code></pre> Upgrade winget package<pre><code>:: Grab the ID from the output of search\nC:\\Users\\blotter&gt;winget upgrade JanDeDobbeleer.OhMyPosh\n</code></pre>"}]}